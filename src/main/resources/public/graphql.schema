schema {
    query: Query
    mutation: Mutation
}

#
# Queries
#
type Query {
    playgrounds: [Playground]
    progress: Progress
}

type Playground {
    id : String!
    name : String
    lng : Float
    lat : Float
    status: Status
}

enum Status {
    not_started
    in_progress
    finished
}

type Progress {
    smokeFree: Stat
    workingOnIt: Stat
    smoking: Stat
}

type Stat {
    count : Int
    percentage : Int
}

#
# Mutations
#

type Mutation {
    createInitiative(input: CreateInitiativeInput!): InputAcceptedResponse!
    joinInitiative(input: JoinInitiativeInput!): InputAcceptedResponse!
}
type InputAcceptedResponse {
    id : String!
}
enum Status {
    not_started
    in_progress
    finished
}
enum Type {
    smokefree
}

input CreateInitiativeInput {
    initiativeId: String!
    type: Type!
    status: Status!
    name: String!
    lat: Float!
    lng: Float!
}
input JoinInitiativeInput {
    initiativeId: String!
}
